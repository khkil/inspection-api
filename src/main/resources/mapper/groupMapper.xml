<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.backend.api.group.GroupMapper">
    <insert id="insertGroup" parameterType="group" useGeneratedKeys="true" keyProperty="idx">
        INSERT INTO `group`(
        <if test="name != null and name != '' ">
            `name`,
        </if>
             `tel`,
             `address`,
             `address_sub`,
              `contact_name`,
              `contact_email`,
              `contact_tel`,
              `cdate`
        ) VALUES (
        <if test="name != null and name != '' ">
            #{name},
        </if>
            #{tel},
            #{address},
            #{addressSub},
            #{contactName},
            #{contactEmail},
            #{contactTel},
            now()
        )
    </insert>
    <update id="updateGroup">
        UPDATE `group`
        <set>
            <if test="group.name != null and group.name != '' "> name = #{group.name},</if>
            <if test="group.tel != null"> tel = #{group.tel},</if>
            <if test="group.address != null"> address = #{group.address},</if>
            <if test="group.addressSub != null"> address_sub = #{group.addressSub},</if>
            <if test="group.contactName != null"> contact_name = #{group.contactName},</if>
            <if test="group.contactEmail != null"> contact_email = #{group.contactEmail},</if>
            <if test="group.contactTel != null"> contact_tel = #{group.contactTel},</if>
        </set>
        WHERE idx = #{groupIdx};
    </update>
    <delete id="deleteGroup" parameterType="int">
        DELETE FROM `group` WHERE idx = #{groupIdx};
    </delete>

    <select id="getGroupList"  resultType="group">
        SELECT * FROM `group`
        <where>
            <if test="searchText != null">AND (name like CONCAT('%', #{searchText}, '%') )</if>
        </where>
    </select>


    <resultMap id="groupMap" type="group" autoMapping="true">
        <id property="idx" column="idx"></id>
        <collection property="grades" column="idx"  select="getGroupGrades"/>
        <collection property="groupCode" column="idx"  select="getGroupCodes"/>
    </resultMap>
    <select id="getGroupDetail" parameterType="int" resultMap="groupMap">
        SELECT * FROM `group` WHERE idx = #{idx}
    </select>

    <select id="getGroupCodes" resultType="groupCode">
        SELECT code FROM group_code WHERE group_idx = #{idx};
    </select>
    <select id="getGroupGrades" resultType="int">
        SELECT user_grade FROM `user` WHERE group_idx = #{idx} GROUP BY user_grade;
    </select>
    <select id="getGroupInspections" resultType="inspection">
        SELECT u.inspection_idx, i.inspection_name FROM `user` u
        LEFT OUTER JOIN inspection i
            ON u.inspection_idx = i.inspection_idx
        WHERE u.group_idx = #{idx}
        GROUP BY i.inspection_idx;;
    </select>

    <!-- admin -->
    <select id="getAdminGroupList"  resultType="group">
        SELECT * FROM `group`
    </select>

</mapper>
