<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.backend.api.inspection.question.QuestionMapper">

    <select id="getAnswerList" resultMap="answerMap">
		SELECT * FROM answer WHERE question_idx = #{question_idx};
	</select>

    <select id="getQuestionListWithAnswer" resultType="question">
        SELECT question_idx,  question_number, question_text, del_yn FROM question WHERE result_idx = #{resultIdx}
    </select>

    <resultMap type="answer" id="answerMap" autoMapping="true">
        <result property="filePath" column="file_path" typeHandler="JSONTypeHandler"/>
    </resultMap>

    <resultMap type="result" id="questionsWithResultMap" >
        <result property="resultIdx" column="result_idx"/>
        <collection property="questionList" column="result_idx" select="getQuestionListWithAnswer"/>
    </resultMap>

    <resultMap type="question" id="questionWithAnswersMap" autoMapping="true">
        <result property="questionIdx" column="question_idx"/>
        <result property="filePath" column="file_path" typeHandler="JSONTypeHandler"/>
        <collection property="answers" column="question_idx" select="getAnswerList"/>
    </resultMap>

    <select id="getQuestionList" resultMap="questionWithAnswersMap">
        SELECT * FROM question WHERE inspection_idx = #{idx} AND del_yn = 'N'
        ORDER BY inspection_idx, question_page, question_number;
    </select>

    <select id="getPageInfo" resultMap="questionWithAnswersMap">
        SELECT * from question WHERE question_page = #{page}  AND inspection_idx = #{inspection_idx} AND del_yn = 'N';
    </select>

    <select id="getQuestionDetail" resultMap="questionWithAnswersMap">
        SELECT * FROM question WHERE question_idx = #{questionIdx}
    </select>
    <select id="getQuestionsOfInspection" resultMap="questionsWithResultMap">
        SELECT result_idx, result_name FROM result WHERE inspection_idx = #{inspectionIdx};
    </select>

    <update id="deleteQuestion" parameterType="int">
        UPDATE question SET del_yn = 'Y' WHERE question_idx = #{questionIdx}
    </update>
    <update id="updateQuestion">
        UPDATE question SET
            question_text = IFNULL(#{question.questionText}, question_text),
            question_type = IFNULL(#{question.questionType}, question_type),
            answer_type = IFNULL(#{question.answerType}, answer_type),
            file_path = #{question.filePath, typeHandler=JSONTypeHandler},
            del_yn = IFNULL(#{question.delYn}, del_yn)
        WHERE question_idx = #{questionIdx};


        <if test="question.answers != null and question.answers.size > 0">
            <foreach collection="question.answers" item="answer" index="index">
                UPDATE answer SET
                    answer_text = IFNULL(#{answer.answerText}, ''),
                    answer_score = IFNULL(#{answer.answerScore}, ''),
                    file_path = #{answer.filePath, typeHandler=JSONTypeHandler}
                WHERE answer_idx = #{answer.answerIdx};
            </foreach>
        </if>
    </update>
    <update id="updateQuestions" parameterType="list">
        <foreach collection="questions" item="question" index="index">
            <choose>

                <when test="question.questionIdx != null and question.questionIdx != '' ">
                    UPDATE question SET
                        question_text = IFNULL(#{question.questionText}, question_text),
                        question_order = IFNULL(#{question.questionOrder}, question_order),
                        question_number = IFNULL(#{question.questionNumber}, question_number),
                        del_yn = IFNULL(#{question.delYn}, del_yn)
                    WHERE question_idx = #{question.questionIdx};

                </when>
                <when test="question.questionIdx == null or question.questionIdx == ''">
                    INSERT INTO question(`inspection_idx`, `result_idx`, `question_number`, `question_text`, `question_order`) values(#{question.inspectionIdx}, #{question.resultIdx}, #{question.questionNumber}, #{question.questionText}, #{question.questionOrder});

                </when>
            </choose>

        </foreach>

    </update>
</mapper>
