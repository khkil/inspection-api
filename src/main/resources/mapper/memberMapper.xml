<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.backend.api.member.MemberMapper">
    <update id="updateMember" parameterType="com.example.backend.api.member.model.Member">

        UPDATE member
        <set>
            <if test="member.name != null"> name = #{member.name},</if>
            <if test="member.password != null"> password = #{member.password},</if>
            <if test="member.email != null"> email = #{member.email},</if>
            <if test="member.phone != null"> phone = #{member.phone},</if>
            <if test="member.address != null"> address = #{member.address},</if>
            <if test="member.addressSub != null"> address_sub = #{member.addressSub},</if>
            <if test="member.school != null"> school = #{member.school},</if>
            <if test="member.education != null"> education = #{member.education},</if>
            <if test="member.grade != null"> grade = #{member.grade},</if>
            <if test="member.major != null"> major = #{member.major},</if>
            <if test="member.job != null"> job = #{member.job},</if>
            <if test="member.company != null"> company = #{member.company},</if>
            <if test="member.jobDetail != null"> job_detail = #{member.jobDetail},</if>
        u_date = NOW()
        </set>
        WHERE idx = #{idx};
    </update>
    <delete id="deleteMemberProgress">
        DELETE ma FROM member_answer ma
        LEFT OUTER JOIN question q
            ON ma.question_idx = q.question_idx
        WHERE ma.member_idx = #{memberIdx}
        AND q.inspection_idx = #{inspectionIdx}
    </delete>

    <select id="loadUserByUserName" parameterType="com.example.backend.api.member.model.Member" resultType="com.example.backend.api.member.model.Member">
        SELECT * FROM member
        WHERE id = #{id}
    </select>

    <select id="findIdByInfo" resultType="com.example.backend.api.member.model.Member" parameterType="map">
        SELECT id FROM member WHERE name = #{name} AND email = #{email}
    </select>

    <select id="findIdByPhone" resultType="com.example.backend.api.member.model.Member" parameterType="map">
        SELECT id FROM member WHERE id = #{id} AND email = #{email}
    </select>
    <select id="getMemberList" resultType="com.example.backend.api.member.model.Member">

        SELECT * FROM member
    </select>

    <select id="getMemberDetail" resultType="com.example.backend.api.member.model.Member">
        SELECT idx, name, id, password, email, phone FROM member
        WHERE idx = #{idx}
    </select>

    <insert id="insertMember" parameterType="com.example.backend.api.member.model.Member" useGeneratedKeys="true" keyProperty="idx">
        INSERT INTO member(id, name, password, role, email, phone, address, address_sub, school, education, grade, major, job, company, job_detail)
            VALUES(#{id}, #{name}, #{password}, #{role}, #{email}, #{phone}, #{address}, #{address_sub}, #{school}, #{education}, #{grade}, #{major}, #{job}, #{company}, #{jobDetail});
    </insert>

    <select id="getMemberProgressList" parameterType="int" resultType="memberProgress">
        SELECT
            i.inspection_idx,
            i.inspection_name,
            q.total_count,
            IF(ISNULL(m.cnt), 0, m.cnt) AS user_count,
            m.current_page
        FROM
            inspection i
        LEFT OUTER JOIN
            (SELECT
                inspection_idx,
                COUNT(*) AS total_count
            FROM
                question
            GROUP BY inspection_idx) q
        ON i.inspection_idx = q.inspection_idx
        LEFT OUTER JOIN
            (SELECT
                q.inspection_idx,
                COUNT(*) AS cnt,
                MAX(q.question_page) AS current_page
            FROM
                member_answer ma
            LEFT OUTER JOIN question q
                ON ma.question_idx = q.question_idx
            WHERE q.inspection_idx = inspection_idx
            AND member_idx = #{memberIdx}
            GROUP BY inspection_idx) m
        ON i.inspection_idx = m.inspection_idx
        WHERE i.pay_yn = 'Y'
    </select>

    <select id="getMemberProgressDetail" resultType="memberProgress">
        SELECT
            i.inspection_idx,
            i.inspection_name,
            q.total_count,
            IF(ISNULL(m.cnt), 0, m.cnt) AS user_count,
            m.current_page
        FROM
            inspection i
        LEFT OUTER JOIN
            (SELECT
            inspection_idx,
            COUNT(*) AS total_count
            FROM
            question
            GROUP BY inspection_idx) q
        ON i.inspection_idx = q.inspection_idx
        LEFT OUTER JOIN
            (SELECT
            q.inspection_idx,
            COUNT(*) AS cnt,
            MAX(q.question_page) AS current_page
            FROM
            member_answer ma
            LEFT OUTER JOIN question q
            ON ma.question_idx = q.question_idx
            WHERE q.inspection_idx = inspection_idx
            AND member_idx = #{memberIdx}
            GROUP BY inspection_idx) m
        ON i.inspection_idx = m.inspection_idx
        WHERE i.pay_yn = 'Y'
        AND i.inspection_idx = #{inspectionIdx}

    </select>
</mapper>
